# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Product Web Services
  license:
    name: Aulia Yudha K
servers:
  - url: http://127.0.0.1:3000/
paths:
  /product:
    post:
      summary: Add New Product
      operationId: product
      parameters:
        - description: name
          in: query
          name: name
          type: string
        - description: description
          in: query
          name: description
          type: string
        - description: thumbnail_url
          in: query
          name: thumbnail_url
          required: true
          type: string
        - description: origin_price
          in: query
          name: origin_price
          required: true
          type: int
        - description: discounted_price
          in: query
          name: discounted_price
          required: true
          type: int
        - description: discounted_rate
          in: query
          name: discounted_rate
          type: int
        - description: status
          in: query
          name: status
          required: true
          type: string
        - description: in_stock
          in: query
          name: in_stock
          required: true
          type: int
        - description: is_preorder
          in: query
          name: is_preorder
          required: true
          type: int
        - description: is_purchasable
          in: query
          name: is_purchasable
          required: true
          type: int
        - description: delivery_condition
          in: query
          name: delivery_condition
          required: true
          type: string
        - description: delivery_display
          in: query
          name: delivery_display
          required: true
          type: string
      responses:
        '200':
          description: Successfully add article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /user:
    post:
      summary: Add New User
      operationId: user
      parameters:
        - description: name
          in: query
          name: name
          type: string
        - description: email
          in: query
          name: email
          type: string
        - description: password
          in: query
          name: password
          type: string
        - description: phone
          in: query
          name: phone
          type: string
        - description: status
          in: query
          name: status
          type: string
      responses:
        '200':
          description: Successfully add article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /favorites:
    post:
      summary: Add New Favorites
      operationId: favorites
      parameters:
        - description: user_id
          in: query
          name: user_id
          type: int
        - description: prod_id
          in: query
          name: prod_id
          type: int
        - description: name
          in: query
          name: name
          type: string
        - description: price
          in: query
          name: price
          type: int
        - description: items
          in: query
          name: items
          type: int
      responses:
        '200':
          description: Successfully add article
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"


  /products:
    get:
      summary: This endpoint to get product, if param null get all product and with param search by Name and DeliveryCondition.
      operationId: products
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: delivery_condition
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Test return
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ProductResponse:
      type: object
      required:
        - message
      properties:
        result:
          type: array
        data:
          items:
            $ref: "#/components/schemas/ProductDataResponse"
          type: array
    ProductDataResponse:
      properties:
        id:
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        deleted_at:
          type: string
        author:
          type: string
        title:
          type: string
        body:
          type: string
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string